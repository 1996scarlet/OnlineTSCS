@model IEnumerable<OnlineTSCS.Models.HomeworkModel>

@{
    ViewBag.Title = "作业管理";
    var flag = (string)Session["Type"] == "教师";
    var myID = int.Parse(Session["Id"].ToString());
}

<div class="jumbotron" style="background-color:darkseagreen">
    <h2 style="color:white">@ViewBag.Title</h2>
    <p style="color:white" class="lead">
        @Html.ActionLink("发布作业", "Create", "HomeworkModels", null, htmlAttributes: new { @class = "btn btn-warning" })
    </p>
</div>

@if (flag)
{
    <div class="alert alert-info alert-dismissible fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
        <strong>提示：</strong>针对教师用户组只显示你自己发布的课程的作业
    </div>

    <div class="alert alert-warning alert-dismissible fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
        <strong>提示：</strong>教师用户组无法查看作业提交对应的学生
    </div>
}

<div>
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#receive" aria-controls="receive" role="tab" data-toggle="tab">待评价的作业</a></li>
        <li role="presentation"><a href="#checked" aria-controls="checked" role="tab" data-toggle="tab">已评价的作业</a></li>
        <li role="presentation"><a href="#send" aria-controls="send" role="tab" data-toggle="tab">进行中的作业</a></li>
        <li role="presentation"><a href="#frozen" aria-controls="frozen" role="tab" data-toggle="tab">已冻结的作业</a></li>
    </ul>

    <div class="tab-content">

        @{
            var selected = Model;
            if (flag)
            {
                selected = selected.Where(x => x.Course.UploadId == myID);
            }
        }

        <div role="tabpanel" class="tab-pane fade in active" id="receive">

            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Course.CourseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Claim)
                    </th>
                    <th>
                        操作
                    </th>
                </tr>

                @foreach (var item in selected.Where(x => !x.Frozen).Select(x => x.HomeworkComments))
                {
                    foreach (var homework in item.Where(x => x.Score == 0))
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(homework.Homework.Course.CourseName, "Details", "CourseModels", routeValues: new { id = homework.Homework.CourseId }, htmlAttributes: null)
                            </td>
                            <td>
                                <span class="label label-success">@homework.Homework.StartDate.ToLongDateString()</span>
                            </td>
                            <td>
                                <span class="label label-warning">@homework.Homework.EndDate.ToLongDateString()</span>
                            </td>
                            <td>
                                @Html.ActionLink(homework.Homework.Claim, "Details", new { id = homework.HomeworkId })
                            </td>
                            <td>
                                @Html.ActionLink("评分", "Mark", "HomeworkModels", routeValues: new { id = homework.HomeworkCommentId }, htmlAttributes: new { @class = "btn btn-info btn-xs" })
                            </td>
                        </tr>
                    }
                }
            </table>

        </div>

        <div role="tabpanel" class="tab-pane fade" id="checked">

            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Course.CourseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Claim)
                    </th>
                    <th>
                        分数
                    </th>
                </tr>

                @foreach (var item in selected.Where(x => !x.Frozen).Select(x => x.HomeworkComments))
                {
                    foreach (var homework in item.Where(x => x.Score != 0))
                    {
                        <tr>
                            <td>
                                @Html.ActionLink(homework.Homework.Course.CourseName, "Details", "CourseModels", routeValues: new { id = homework.Homework.CourseId }, htmlAttributes: null)
                            </td>
                            <td>
                                <span class="label label-success">@homework.Homework.StartDate.ToLongDateString()</span>
                            </td>
                            <td>
                                <span class="label label-warning">@homework.Homework.EndDate.ToLongDateString()</span>
                            </td>
                            <td>
                                @Html.ActionLink(homework.Homework.Claim, "Details", new { id = homework.HomeworkId })
                            </td>
                            <td>
                                <span class="label label-danger">@homework.Score</span>
                            </td>
                        </tr>
                    }
                }
            </table>

        </div>

        <div role="tabpanel" class="tab-pane fade" id="send">

            <table class="table">

                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Course.CourseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Claim)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in selected.Where(x => !x.Frozen))
            {
                    <tr>
                        <td>
                            @Html.ActionLink(item.Course.CourseName, "Details", "CourseModels", routeValues: new { id = item.CourseId }, htmlAttributes: null)
                        </td>
                        <td>
                            <span class="label label-success">@item.StartDate.ToLongDateString()</span>
                        </td>
                        <td>
                            <span class="label label-warning">@item.EndDate.ToLongDateString()</span>
                        </td>
                        <td>
                            @Html.ActionLink(item.Claim, "Details", new { id = item.HomeworkId })
                        </td>
                        <td>
                            @Html.ActionLink("冻结", "Delete", new { id = item.HomeworkId }, htmlAttributes: new { @class = "btn btn-xs btn-danger" })
                        </td>
                    </tr>
                }
            </table>

        </div>

        <div role="tabpanel" class="tab-pane fade" id="frozen">

            <table class="table">

                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Course.CourseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EndDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Claim)
                    </th>
                </tr>

                @foreach (var item in selected.Where(x => x.Frozen))
            {
                    <tr>
                        <td>
                            @Html.ActionLink(item.Course.CourseName, "Details", "CourseModels", routeValues: new { id = item.CourseId }, htmlAttributes: null)
                        </td>
                        <td>
                            <span class="label label-success">@item.StartDate.ToLongDateString()</span>
                        </td>
                        <td>
                            <span class="label label-warning">@item.EndDate.ToLongDateString()</span>
                        </td>
                        <td>
                            @Html.ActionLink(item.Claim, "Details", new { id = item.HomeworkId })
                        </td>
                    </tr>
                }
            </table>

        </div>
    </div>

</div>