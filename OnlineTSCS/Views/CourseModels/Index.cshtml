@model IEnumerable<OnlineTSCS.Models.CourseModel>

@{
    ViewBag.Title = "课程管理";
    var flag = (string)Session["Type"] == "教师";
    var myID = int.Parse(Session["Id"].ToString());
}

<div class="jumbotron" style="background-color:mediumturquoise">
    <h2 style="color:white">@ViewBag.Title</h2>
    <p style="color:white" class="lead">
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#myModal">课程检索</button>
        @Html.ActionLink("添加课程", "Create", "CourseModels", null, htmlAttributes: new { @class = "btn btn-warning" })
    </p>
</div>

@if (flag)
{
    <div class="alert alert-info alert-dismissible fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
        <strong>提示：</strong>针对教师用户组只显示你自己提交的课程
    </div>
}
else
{
    <div class="alert alert-info alert-dismissible fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
        <strong>提示：</strong>请及时审核教师已提交的课程
    </div>
}

<div>

    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#receive" aria-controls="receive" role="tab" data-toggle="tab">状态正常的课程</a></li>
        <li role="presentation"><a href="#send" aria-controls="send" role="tab" data-toggle="tab">正在审核的课程</a></li>
        <li role="presentation"><a href="#frozen" aria-controls="frozen" role="tab" data-toggle="tab">已被冻结的课程</a></li>
        @if (!flag)
        {
            <li role="presentation"><a href="#mapping" aria-controls="mapping" role="tab" data-toggle="tab">选课映射</a></li>
        }
    </ul>

    <div class="tab-content">

        @{
            var selected = Model;
            if (flag)
            {
                selected = selected.Where(x => x.UploadId == myID);
            }
        }

        <div role="tabpanel" class="tab-pane fade in active" id="receive">

            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.CourseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Type)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Capacity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Lesson)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.JudgeId)
                    </th>
                    <th>
                        操作
                    </th>
                </tr>

                @foreach (var item in selected.Where(x => !x.Frozen && x.Checked))
                {
                    <tr>
                        <td>
                            @Html.ActionLink(item.CourseName, "Details", new { id = item.CourseId })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Type)
                        </td>
                        <td>
                            <span class="label label-success">@item.Mapping.Count / @item.Capacity</span>
                        </td>
                        <td>
                            <span class="label label-warning">@item.Lesson</span>
                        </td>
                        <td>
                            @item.StartDate.ToLongDateString()
                        </td>
                        <td>
                            @Html.ActionLink("ID:" + item.JudgeId, "Details", "AccountModels", routeValues: new { id = item.JudgeId }, htmlAttributes: new { @class = "btn btn-danger btn-xs" })
                        </td>
                        <td>
                            @Html.ActionLink("编辑", "Edit", "CourseModels", routeValues: new { id = item.CourseId }, htmlAttributes: new { @class = "btn btn-primary btn-xs" })
                            @Html.ActionLink("冻结", "Frozen", "CourseModels", routeValues: new { id = item.CourseId }, htmlAttributes: new { @class = "btn btn-info btn-xs" })
                        </td>
                    </tr>
                }
            </table>

        </div>

        <div role="tabpanel" class="tab-pane fade" id="send">

            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.CourseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Type)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Capacity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Lesson)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th>
                        操作
                    </th>
                </tr>

                @foreach (var item in selected.Where(x => !x.Frozen && !x.Checked))
                {
                    <tr>
                        <td>
                            @Html.ActionLink(item.CourseName, "Details", new { id = item.CourseId })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Type)
                        </td>
                        <td>
                            <span class="label label-default">@item.Capacity</span>
                        </td>
                        <td>
                            <span class="label label-warning">@item.Lesson</span>
                        </td>
                        <td>
                            @item.StartDate.ToLongDateString()
                        </td>
                        <td>
                            @if (!flag)
                            {
                                @Html.ActionLink("通过", "Pass", "CourseModels", routeValues: new { id = item.CourseId }, htmlAttributes: new { @class = "btn btn-success btn-xs" })
                                <span></span>
                                @Html.ActionLink("冻结", "Frozen", "CourseModels", routeValues: new { id = item.CourseId }, htmlAttributes: new { @class = "btn btn-info btn-xs" })
                            }
                            else
                            {
                                @Html.ActionLink("编辑", "Edit", "CourseModels", routeValues: new { id = item.CourseId }, htmlAttributes: new { @class = "btn btn-primary btn-xs" })
                            }
                        </td>
                    </tr>
                }
            </table>

        </div>

        <div role="tabpanel" class="tab-pane fade" id="frozen">

            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.CourseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Type)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Capacity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Lesson)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Checked)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in selected.Where(x => x.Frozen))
                {
                <tr>
                    <td>
                        @Html.ActionLink(item.CourseName, "Details", new { id = item.CourseId })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        <span class="label label-default">@item.Capacity</span>
                    </td>
                    <td>
                        <span class="label label-warning">@item.Lesson</span>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Checked)
                    </td>
                    <td>
                        @item.StartDate.ToLongDateString()
                    </td>
                    <td>
                        @if (!flag)
                            {
                        @Html.ActionLink("恢复", "Frozen", "CourseModels", routeValues: new { id = item.CourseId }, htmlAttributes: new { @class = "btn btn-info btn-xs" })
                            }
                    </td>
                </tr>
                }
            </table>

        </div>

        @if (!flag)
        {
            <div role="tabpanel" class="tab-pane fade" id="mapping">

                <table class="table">
                    <tr>
                        <th>
                            选课账号
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Type)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CourseName)
                        </th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        foreach (var mapping in item.Mapping)
                        {
                            <tr>
                                <td>
                                    @Html.ActionLink(mapping.Account.AccountName, "Details", "AccountModels", routeValues: new { id = mapping.Id }, htmlAttributes: null)
                                </td>
                                <td>
                                    <span class="label label-default">@item.Type</span>
                                </td>
                                <td>
                                    @Html.ActionLink(item.CourseName, "Details", new { id = item.CourseId })
                                </td>
                            </tr>
                        }

                    }
                </table>

            </div>

        }
    </div>

</div>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        @using (Html.BeginForm("Index", "CourseModels", FormMethod.Get))
        {
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">查询条件</h4>
                </div>
                <div class="modal-body">
                    <div class="form">

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.EnumDropDownListFor(model => model.FirstOrDefault().Type, htmlAttributes: new { @class = "form-control" })
                                </div>
                                <div class="form-group">
                                    @Html.TextBox("name", "", htmlAttributes: new { @class = "form-control", placeholder = "课程关键字" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.TextBox("description", "", htmlAttributes: new { @class = "form-control", placeholder = "课程描述" })
                                </div>
                                <div class="form-group">
                                    @Html.TextBox("upload", "", htmlAttributes: new { @class = "form-control", placeholder = "主讲教师" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning" data-dismiss="modal">关闭</button>
                    <input type="submit" value="查询" class="btn btn-success" />
                </div>
            </div>

        }
    </div>
</div>