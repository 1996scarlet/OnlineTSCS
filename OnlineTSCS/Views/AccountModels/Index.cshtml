@model IEnumerable<OnlineTSCS.Models.AccountModel>

@{
    ViewBag.Title = "用户信息管理";
}

<div class="jumbotron" style="background-color:gold">
    <h2 style="color:white">@ViewBag.Title</h2>
    <p style="color:white" class="lead">
        @Html.ActionLink("添加用户", "Register", "AccountModels", null, htmlAttributes: new { @class = "btn btn-info" })
        <button type="button" class="btn btn-warning" data-toggle="modal" data-target="#myModal">用户信息查询</button>
        <button class="btn btn-danger" onclick="ShowOrHide()">显示/隐藏密码</button>
    </p>
</div>

<div>
    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#one" aria-controls="one" role="tab" data-toggle="tab">管理员(类)用户</a></li>
        <li role="presentation"><a href="#two" aria-controls="two" role="tab" data-toggle="tab">学生用户</a></li>
        <li role="presentation"><a href="#three" aria-controls="three" role="tab" data-toggle="tab">教师用户</a></li>
    </ul>

    <div class="tab-content">
        <div role="tabpanel" class="tab-pane fade in active" id="one">
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Id) (Edit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AccountName)
                    </th>
                    <th name="pass">
                        @Html.DisplayNameFor(model => model.Password)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Credit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.School)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Mobile)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                </tr>

                @foreach (var item in Model.Where(x =>
            x.Type == OnlineTSCS.Models.EnumClass.EnumAccountType.论坛管理员 ||
            x.Type == OnlineTSCS.Models.EnumClass.EnumAccountType.课程管理员 ||
            x.Type == OnlineTSCS.Models.EnumClass.EnumAccountType.超级管理员))
                {
                <tr>
                    <td>
                        @Html.ActionLink("ID:" + item.Id, "Edit", "AccountModels", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-success btn-xs" })
                    </td>
                    <td>
                        @Html.ActionLink(item.AccountName, "Details", new { id = item.Id })
                    </td>
                    <td name="pass">
                        @Html.ActionLink(item.Password, "PasswordEdit", "AccountModels", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-warning btn-xs" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Credit)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.School)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Mobile)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                </tr>
                }

            </table>
        </div>

        <div role="tabpanel" class="tab-pane fade" id="two">
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Id) (Edit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AccountName)
                    </th>
                    <th name="pass">
                        @Html.DisplayNameFor(model => model.Password)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Credit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.School)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Mobile)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                </tr>

                @foreach (var item in Model.Where(x =>x.Type == OnlineTSCS.Models.EnumClass.EnumAccountType.学生))
                {
                <tr>
                    <td>
                        @Html.ActionLink("ID:" + item.Id, "Edit", "AccountModels", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-success btn-xs" })
                    </td>
                    <td>
                        @Html.ActionLink(item.AccountName, "Details", new { id = item.Id })
                    </td>
                    <td name="pass">
                        @Html.ActionLink(item.Password, "PasswordEdit", "AccountModels", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-warning btn-xs" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Credit)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.School)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Mobile)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                </tr>
                }

            </table>
        </div>

        <div role="tabpanel" class="tab-pane fade" id="three">
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Id) (Edit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AccountName)
                    </th>
                    <th name="pass">
                        @Html.DisplayNameFor(model => model.Password)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Credit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.School)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Mobile)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                </tr>

                @foreach (var item in Model.Where(x => x.Type == OnlineTSCS.Models.EnumClass.EnumAccountType.教师))
                {
                    <tr>
                        <td>
                            @Html.ActionLink("ID:" + item.Id, "Edit", "AccountModels", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-success btn-xs" })
                        </td>
                        <td>
                            @Html.ActionLink(item.AccountName, "Details", new { id = item.Id })
                        </td>
                        <td name="pass">
                            @Html.ActionLink(item.Password, "PasswordEdit", "AccountModels", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-warning btn-xs" })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Credit)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.School)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Mobile)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                    </tr>
                }

            </table>
        </div>

    </div>

</div>

<script type="text/javascript">
    function ShowOrHide() {
        var tab = document.getElementsByName('pass');

        for (var i = 0; i < tab.length; i++) {
            if (tab[i].style.display == 'none') {
                tab[i].style.display = '';
            } else {
                tab[i].style.display = 'none';
            }
        }
    }
</script>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        @using (Html.BeginForm("Index", "AccountModels", FormMethod.Get))
        {
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">查询条件</h4>
                </div>
                <div class="modal-body">

                    <div class="form">

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.TextBox("credit", "", htmlAttributes: new { @class = "form-control", placeholder = "信用卡号" })
                                </div>
                                <div class="form-group">
                                    @Html.TextBox("name", "", htmlAttributes: new { @class = "form-control", placeholder = "用户账号" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.TextBox("school", "", htmlAttributes: new { @class = "form-control", placeholder = "单位(学校)" })
                                </div>
                                <div class="form-group">
                                    @Html.TextBox("mobile", "", htmlAttributes: new { @class = "form-control", placeholder = "手机号码" })
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">关闭</button>
                    <input type="submit" value="查询" class="btn btn-success" />
                </div>
            </div>

        }
    </div>
</div>