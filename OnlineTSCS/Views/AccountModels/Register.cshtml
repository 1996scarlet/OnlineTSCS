@model OnlineTSCS.Models.AccountModel

@{
    ViewBag.Title = "新用户注册";
}

@using (Html.BeginForm())
{

    <div class="jumbotron" style="background-color:yellowgreen">
        <h2 style="color:white">@ViewBag.Title</h2>
        <p style="color:white" class="lead">
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div style="margin-top:16px">
                    @Html.LabelFor(model => model.AccountName, htmlAttributes: new { @class = "control-label sr-only" })
                    @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control", placeholder = "账号名称" } })
                    @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
                </div>

                <div style="margin-top:16px">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label sr-only" })
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "密码" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div style="margin-top:16px">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label sr-only" })
                    @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>
            <button style="margin-top:16px" class="btn btn-primary" type="submit">
                创建新用户
            </button>
        </p>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
