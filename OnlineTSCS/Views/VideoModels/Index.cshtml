@model IEnumerable<OnlineTSCS.Models.VideoModel>

@{
    ViewBag.Title = "视频管理";
    var flag = (string)Session["Type"] == "教师";
    var myID = int.Parse(Session["Id"].ToString());
}

<div class="jumbotron" style="background-color:mediumaquamarine">
    <h2 style="color:white">@ViewBag.Title</h2>
    <p style="color:white" class="lead">
        @Html.ActionLink("添加视频", "Create", "VideoModels", null, htmlAttributes: new { @class = "btn btn-warning" })
    </p>
</div>

@if (flag)
{
    <div class="alert alert-info alert-dismissible fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
        <strong>提示：</strong>针对教师用户组只显示你自己提交的课程的视频
    </div>
}

<div>

    <!-- Nav tabs -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#receive" aria-controls="receive" role="tab" data-toggle="tab">状态正常的视频</a></li>
        <li role="presentation"><a href="#send" aria-controls="send" role="tab" data-toggle="tab">正在审核的视频</a></li>
        <li role="presentation"><a href="#frozen" aria-controls="frozen" role="tab" data-toggle="tab">已被冻结的视频</a></li>
    </ul>

    <div class="tab-content">

        @{
            var selected = Model;
            if (flag)
            {
                selected = selected.Where(x => x.Id == myID);
            }
        }

        <div role="tabpanel" class="tab-pane fade in active" id="receive">

            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.VideoName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Times)
                    </th>
                    <th>
                        评论数量
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BiliAid)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BiliCid)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Course.CourseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UpLoadDate)
                    </th>
                    <th>
                        操作
                    </th>
                </tr>

                @foreach (var item in selected.Where(x => !x.Frozen && x.Course.Checked))
                {
                    <tr>
                        <td>
                            @Html.ActionLink(item.VideoName, "Details", "VideoModels", routeValues: new { id = item.VideoId }, htmlAttributes: null)
                        </td>
                        <td>
                            <span class="label label-success">@item.Times</span>
                        </td>
                        <td>
                            <span class="label label-warning">@item.VideoComments.Count</span>
                        </td>
                        <td>
                            <span class="label label-default">@item.BiliAid</span>
                        </td>
                        <td>
                            <span class="label label-default">@item.BiliCid</span>
                        </td>
                        <td>
                            @Html.ActionLink(item.Course.CourseName, "Details", "CourseModels", routeValues: new { id = item.CourseId }, htmlAttributes: null)
                        </td>
                        <td>
                            @item.UpLoadDate.ToLongDateString()
                        </td>
                        <td>
                            @Html.ActionLink("编辑", "Edit", "VideoModels", routeValues: new { id = item.CourseId }, htmlAttributes: new { @class = "btn btn-info btn-xs" })
                        </td>
                    </tr>
                }
            </table>

        </div>

        <div role="tabpanel" class="tab-pane fade" id="send">

            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.VideoName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BiliAid)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BiliCid)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Course.CourseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UpLoadDate)
                    </th>
                    <th>
                        操作
                    </th>
                </tr>

                @foreach (var item in selected.Where(x => !x.Frozen && !x.Course.Checked))
                {
                    <tr>
                        <td>
                            @Html.ActionLink(item.VideoName, "Details", "VideoModels", routeValues: new { id = item.VideoId }, htmlAttributes: null)
                        </td>
                        <td>
                            <span class="label label-default">@item.BiliAid</span>
                        </td>
                        <td>
                            <span class="label label-default">@item.BiliCid</span>
                        </td>
                        <td>
                            @Html.ActionLink(item.Course.CourseName, "Details", "CourseModels", routeValues: new { id = item.CourseId }, htmlAttributes: null)
                        </td>
                        <td>
                            @item.UpLoadDate.ToLongDateString()
                        </td>
                        <td>
                            @Html.ActionLink("编辑", "Edit", "VideoModels", routeValues: new { id = item.CourseId }, htmlAttributes: new { @class = "btn btn-info btn-xs" })
                        </td>
                    </tr>
                }
            </table>

        </div>

        <div role="tabpanel" class="tab-pane fade" id="frozen">

            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.VideoName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BiliAid)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.BiliCid)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Course.Checked)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Course.CourseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UpLoadDate)
                    </th>
                </tr>

                @foreach (var item in selected.Where(x => x.Frozen))
                {
                    <tr>
                        <td>
                            @Html.ActionLink(item.VideoName, "Details", "VideoModels", routeValues: new { id = item.VideoId }, htmlAttributes: null)
                        </td>
                        <td>
                            <span class="label label-default">@item.BiliAid</span>
                        </td>
                        <td>
                            <span class="label label-default">@item.BiliCid</span>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Course.Checked)
                        </td>
                        <td>
                            @Html.ActionLink(item.Course.CourseName, "Details", "CourseModels", routeValues: new { id = item.CourseId }, htmlAttributes: null)
                        </td>
                        <td>
                            @item.UpLoadDate.ToLongDateString()
                        </td>
                    </tr>
                }
            </table>

        </div>
    </div>

</div>
